include comps/header.jade

div.container-fluid
  div.row-fluid
   div.span2 
   div.span10
      div.btn-group#company
        button.btn.btn-primary.dropdown-toggle(data-toggle="dropdown", type="button") Company
         span.caret
        ul.dropdown-menu(role="menu")
         li
          if(locals.companies)
            each c in locals.companies 
              a(href="/testcases/#{c.company_name}")= c.company_name
      if(locals.teams)
        div.btn-group#teams
          button.btn.btn-primary.dropdown-toggle(data-toggle="dropdown", type="button") Team 
           span.caret
          ul.dropdown-menu(role="menu")
           li
              each team in locals.teams 
                a(href="/testcases/#{company}/#{team.team_name}")= team.team_name 
      if(locals.components)
        div.btn-group#components
          button.btn.btn-primary.dropdown-toggle(data-toggle="dropdown", type="button") Component 
           span.caret
          ul.dropdown-menu(role="menu")
           li
              each component in locals.components 
                a(href="/testcases/#{company}/#{team}/#{component.co_name}")= component.co_name 
      if(locals.scenarios)
       div.btn-group#execute
          button.btn.btn-primary.dropdown-toggle(data-toggle="dropdown", type="button") Execute 
           span.caret
          ul.dropdown-menu(role="menu")
           li
            a#exec-all(href='#') All
            a#exec-customized(href='#') Customized 
            a#exec-selected(href='#') Selected 
        

    if(locals.scenarios)
      div.table-responsive
        table.table.table-bordered#scenariosTable
          thead
            tr
             th#tc_id TC_ID
             th#tc_scenario TC_SCENARIO
          tbody
           each scenario in locals.scenarios
            tr.scenario-row(data-id="#{scenario.tc_id}", data-steps="#{scenario.tc_steps}", data-target=".scenario-modal")
             td.scenario-id= scenario.tc_id
             td.scenario-name= scenario.tc_scenario
      
      div.modal.scenario-modal(tabindex="-1", role="dialog")
        div.modal-dialog
          div.modal-content 
            div.modal-header
              button.close.modal-close(type="button")
                span(aria-hidden="true") &times;
                span.sr-only close
              h4.modal-title 
            div.modal-body-status.alert(role="alert")
            div.modal-body
            div.modal-footer
              span.glyphicon.glyphicon-plus-sign(aria-hidden="true")

  script(type='text/javascript').
  
   $(document).ready(function(){

      // Sets labels on the dropdowns with the selected values ( based on url params )
      Helper.setDropDownText();

      // highlight row on click
      Helper.highlightTblRow("#scenariosTable tbody tr", "success"); 
      
      // DataTable initialize
      $("#scenariosTable").DataTable();    
  
      // object to handle the modal 
      var modal = new Modal('.scenario-modal');

      // object to get and update testcases
      var testCase = new TestCases();

      // show modal with steps on double click
      $("#scenariosTable tbody").on("dblclick", ".scenario-row", function(evt){
        var modal        = new Modal('.scenario-modal');
        var row          = evt.target.parentNode;
        var scenarioName = row.children[1].innerHTML;
        var scenarioId   = row.dataset.id;
        var stepIds      = row.dataset.steps;
        var modalData    = '';
        var stepsPromise = testCase.getSteps(stepIds);
        stepsPromise.success(function(steps){ 
         steps.map(function(step){
           modalData += "<div class='step-row' data-id='" + step.st_id + "'>" + step.st_text + "</div>";
          }); 
         modal.setTitle(scenarioName, scenarioId);
         modal.setBody(modalData);
         modal.toggle('show'); 
        }); 
      });

      $(".modal-body").on("dblclick", ".step-row",  function(evt){
        modal.editStep(evt); 
      })

      $(".modal-title").on("dblclick", function(evt){
        modal.editTitle(evt);          
      });

      $(".modal-body").on("submit", '.step-form',  function(evt){
        evt.stopPropagation();
        evt.preventDefault();
        var saveStepPromise = testCase.updateStep($(this).serializeArray());
        saveStepPromise.success(function(result){
          modal.setStatus('success', 'Successfully saved your changes.');
        }).fail(function(){
            modal.setStatus('danger', 'Could not save change.');
          })
         modal.clearStatus(3000);
         modal.resetStep(evt);
      });

      $(".modal-close").on("click", function(evt){
        modal.toggle('hide'); 
      });

      $(".scenario-modal").on("keyup", function(evt){
        if(evt.keyCode === 27){ 
          modal.toggle('hide'); 
        }
      });
      
      $("#exec-customized").on('click', function(){
       var modal = new Modal('.scenario-modal');
       modal.setTitle('Execute Scenarios');
       modal.setBody('<div class="table-responsive"><table class="table"><td>Example!!</td></table></div>');
       modal.toggle('show');
      });

   });
   

include comps/footer.jade

